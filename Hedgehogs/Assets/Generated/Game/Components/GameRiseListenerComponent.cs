//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Assets.Editor.CodeGenerators.ComponentAllEntityApiInterfaceGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity : IRiseListenerEntity { }

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public RiseListenerComponent riseListener { get { return (RiseListenerComponent)GetComponent(GameComponentsLookup.RiseListener); } }
    public bool hasRiseListener { get { return HasComponent(GameComponentsLookup.RiseListener); } }

    public void AddRiseListener(System.Collections.Generic.List<IRiseListener> newValue) {
        var index = GameComponentsLookup.RiseListener;
        var component = (RiseListenerComponent)CreateComponent(index, typeof(RiseListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceRiseListener(System.Collections.Generic.List<IRiseListener> newValue) {
        var index = GameComponentsLookup.RiseListener;
        var component = (RiseListenerComponent)CreateComponent(index, typeof(RiseListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveRiseListener() {
        RemoveComponent(GameComponentsLookup.RiseListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherRiseListener;

    public static Entitas.IMatcher<GameEntity> RiseListener {
        get {
            if (_matcherRiseListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.RiseListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherRiseListener = matcher;
            }

            return _matcherRiseListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddRiseListener(IRiseListener value) {
        var listeners = hasRiseListener
            ? riseListener.value
            : new System.Collections.Generic.List<IRiseListener>();
        listeners.Add(value);
        ReplaceRiseListener(listeners);
    }

    public void RemoveRiseListener(IRiseListener value, bool removeComponentWhenEmpty = true) {
        var listeners = riseListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveRiseListener();
        } else {
            ReplaceRiseListener(listeners);
        }
    }
}
